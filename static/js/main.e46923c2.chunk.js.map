{"version":3,"sources":["tools/onekey.js","context.js","tools/keyboard.js","tools/instrumentNames.js","tools/selector.js","player/barplayer.js","tools/page.js","notation/notation.js","notation/pitchSelector.js","notation/tapSelector.js","notation/page.js","App.js","serviceWorker.js","index.js"],"names":["onekey","state","play","audio","Audio","_this","props","theKey","togglePlay","console","log","setState","pause","currentTime","currentNote","React","createContext","note","src","dur","this","prevProps","updateAudio","react_default","a","createElement","className","class","onClick","keyname","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","Component","screenSize","width","height","context","instrument","keyboard","render","nn","theIns","keyvalue","output","i","value","String","length","push","tools_onekey","key","row","names","Example","_useState","useState","_useState2","Object","slicedToArray","dropdownOpen","setDropdownOpen","instru","instrumentNames","map","DropdownItem","chooseInstru","insName","replace","c","toUpperCase","wikilink","Card","body","CardTitle","href","style","padding","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","DropdownMenu","bar","scale","barplayer","playbar","j","url","beat","Promise","resolve","setTimeout","playbeat","TheInstru","oldApp","theInstrument","updateWindowDimensions","window","addEventListener","bind","removeEventListener","innerWidth","innerHeight","Provider","selector","src_tools_keyboard","player_barplayer","Container","Row","Col","items","selectPitch","selectTap","PageCompose","pitchSelector","tapSelector","notation","App","notation_page","page","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uRAwEeA,0NAhEXC,MAAQ,CACJC,MAAM,EACNC,MAAO,IAAIC,MAAMC,EAAKC,MAAMC,WA8BhCC,WAAa,WAET,IAAIL,EAAQE,EAAKJ,MAAME,MAIvB,GAHAM,QAAQC,IAAIP,GACZE,EAAKM,SAAS,CAAET,MAAOG,EAAKJ,MAAMC,OAE7BG,EAAKJ,MAAMC,KAGX,CACDC,EAAMS,QACNT,EAAMU,YAAc,EACpB,IAAMC,EAAcC,IAAMC,cAAc,CACpCC,KAAMd,EAAMe,IACZC,IAAKhB,EAAMU,cAEfJ,QAAQC,IAAII,QATZX,EAAMD,mFAlCFK,GACRa,KAAKT,SAAS,CAAER,MAAO,IAAIC,MAAMG,uDAGXc,GAEtBD,KAAKE,YAAYD,EAAUd,yCA0C3B,OACIgB,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,KAAKd,MAAMqB,MAAOC,QAASR,KAAKZ,YAC3CY,KAAKd,MAAMuB,QACXT,KAAKnB,MAAMC,KACZqB,EAAAC,EAAAC,cAAA,OAAKK,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,cAAcP,UAAU,iDAAiDQ,KAAK,MAAMC,MAAM,6BAA6BC,QAAQ,eAAcb,EAAAC,EAAAC,cAAA,QAAMY,KAAK,eAAeC,EAAE,uQAC/Of,EAAAC,EAAAC,cAAA,OAAKK,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,cAAcP,UAAU,iDAAiDQ,KAAK,MAAMC,MAAM,6BAA6BC,QAAQ,eAAcb,EAAAC,EAAAC,cAAA,QAAMY,KAAK,eAAeC,EAAE,sRA3D1OvB,IAAMwB,YCNrBC,EAAWzB,IAAMC,cAAc,CACjCyB,MAAO,IACPC,OAAO,MAIIC,EAAA,CACXC,WAHe7B,IAAMC,cAAc,aAInCwB,cCqDWK,6MAlDb5C,MAAQ,8FAKNQ,QAAQC,IAAI,0BACZU,KAAK0B,qCAGHC,GAEF,IAAIC,EAAQ,cAAcL,EAAQC,WAAW,OACvCf,EAAU,CAAC,KAAM,GAAG,KAAM,GAAG,KAAM,KAAM,GAAG,KAAM,GAAG,KAAK,GAAI,MAC9DoB,EAAW,CAAC,IAAK,KAAK,IAAK,KAAM,IAAI,IAAK,KAAK,IAAK,KAAK,IAAK,KAAK,KAErEC,EAAS,GACb,IAAK,IAAIC,KAAKF,EAAU,CACtB,IAAIG,EAAQH,EAASE,GAAKE,OAAON,GAC7BxC,EAAQyC,EAAO,IAAII,EAAM,OAC1BH,EAASE,GAAGG,OAAO,EACpBJ,EAAOK,KACLhC,EAAAC,EAAAC,cAAC+B,EAAD,CAAQ7B,MAAM,WAAW8B,IAAKL,EAAO7C,OAAQA,EAAQsB,QAASA,EAAQsB,MAIxED,EAAOK,KACLhC,EAAAC,EAAAC,cAAC+B,EAAD,CAAQ7B,MAAM,WAAW8B,IAAKL,EAAO7C,OAAQA,EAAQsB,QAASA,EAAQsB,MAK5E,OAAOD,mCAIP,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACVN,KAAKsC,IAAI,IAEdnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACVN,KAAKsC,IAAI,IAEdnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACVN,KAAKsC,IAAI,YA7CC3C,IAAMwB,mBCyHdoB,EAnIF,CACX,YACA,gBACA,uBACA,wBACA,wBACA,QACA,WACA,WACA,UACA,QACA,eACA,UACA,aACA,eACA,gBACA,eACA,wBACA,UACA,QACA,aACA,eACA,WACA,WACA,aACA,oBACA,gBACA,WACA,uBACA,qBACA,uBACA,wBACA,uBACA,wBACA,mBACA,mBACA,eACA,SACA,QACA,cACA,gBACA,YACA,kBACA,eACA,kBACA,kBACA,eACA,cACA,aACA,eACA,oBACA,mBACA,UACA,YACA,cACA,aACA,kBACA,UACA,OACA,gBACA,kBACA,kBACA,eACA,iBACA,eACA,gBACA,oBACA,UACA,cACA,YACA,gBACA,OACA,UACA,gBACA,kBACA,oBACA,gBACA,aACA,kBACA,cACA,cACA,iBACA,aACA,cACA,YACA,mBACA,UACA,oBACA,WACA,aACA,iBACA,aACA,WACA,aACA,WACA,SACA,QACA,cACA,cACA,cACA,cACA,oBACA,oBACA,eACA,eACA,gBACA,gBACA,cACA,aACA,kBACA,kBACA,aACA,kBACA,iBACA,YACA,UACA,cACA,kBACA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","file":"static/js/main.e46923c2.chunk.js","sourcesContent":["import React from 'react';\nimport './keyboard.css';\n\n//import { Button } from 'reactstrap';\n//import theKey from '../resources/sound/accordion-mp3'\n\n\nclass onekey extends React.Component {\n    state = {\n        play: false,\n        audio: new Audio(this.props.theKey)\n    }\n\n    updateAudio(theKey) {\n        this.setState({ audio: new Audio(theKey) })\n\n    }\n    componentWillReceiveProps(prevProps) {\n        //console.log(prevProps)\n        this.updateAudio(prevProps.theKey)\n    }\n\n    /*componentDidMount() {\n        console.log(this.props.theKey)\n        this.updateAudio()\n        //this.audio.addEventListener('ended', () => this.setState({ play: false }));\n\n    }\n\n    /*componentWillUnmount() {\n        audio.removeEventListener('ended', () => this.setState({ play: false }));\n    }*/\n\n    /*togglePlay = () => {\n        this.setState({ play: !this.state.play }, () => {\n            this.state.play ? this.audio.play() : this.audio.pause();\n        });\n    }*/\n\n\n    togglePlay = () => {\n\n        let audio = this.state.audio\n        console.log(audio)\n        this.setState({ play: !this.state.play });\n\n        if (!this.state.play) {\n            audio.play()\n        }\n        else {\n            audio.pause()\n            audio.currentTime = 0\n            const currentNote = React.createContext({\n                note: audio.src,\n                dur: audio.currentTime\n            })\n            console.log(currentNote)\n        }\n    }\n\n    render() {\n        return (\n            <div className={this.props.class} onClick={this.togglePlay}>\n                {this.props.keyname}\n                {this.state.play ? \n                <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"stop-circle\" className=\"svg-inline--fa fa-stop-circle fa-w-16 playicon\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256zm296-80v160c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h160c8.8 0 16 7.2 16 16z\"></path></svg> : \n                <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"play-circle\" className=\"svg-inline--fa fa-play-circle fa-w-16 playicon\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M371.7 238l-176-107c-15.8-8.8-35.7 2.5-35.7 21v208c0 18.4 19.8 29.8 35.7 21l176-101c16.4-9.1 16.4-32.8 0-42zM504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256z\"></path></svg>}\n            </div>\n        );\n    }\n}\n\nexport default onekey;","import React from 'react';\nconst screenSize=React.createContext({\n    width: 320,\n    height:512\n})\nconst instrument = React.createContext('accordion');\n\nexport default {\n    instrument,\n    screenSize\n}\n","import React from 'react';\n//import axios from 'axios'\n//import { Container, div, Col } from 'reactstrap';\n\nimport Onekey from './onekey'\nimport context from '../context'\nimport './keyboard.css';\n//import { render } from 'react-dom';\n\n//import theIns from '../resources/sound/cello-mp3'\n\nclass keyboard extends React.Component {\n  state = {\n    //theInstrument: context.instrument\n  }\n  \n  componentWillReceiveProps(){\n    console.log('keyboard receive props')\n    this.render()\n  }\n\n  row(nn) {\n    \n    let theIns= 'MusyngKite/'+context.instrument+'-mp3'\n    const keyname = ['Do', '','Re', '','Mi', 'Fa', '','So', '','La','', 'Ti']\n    const keyvalue = ['C', 'Db','D', 'Eb', 'E','F', 'Gb','G', 'Ab','A', 'Bb','B']\n\n    let output = []\n    for (var i in keyvalue) {\n      let value = keyvalue[i] + String(nn)\n      let theKey= theIns+'/'+value+'.mp3'\n      if(keyvalue[i].length<2){\n        output.push(\n          <Onekey class='whitekey' key={value} theKey={theKey} keyname={keyname[i]}></Onekey>\n        )\n      }\n      else{\n        output.push(\n          <Onekey class='blackkey' key={value} theKey={theKey} keyname={keyname[i]}></Onekey>\n        )\n\n      }\n    }\n    return output\n  }\n  //console.log(div(3))\n  render() {\n    return (\n      <div className='whole'>\n        <div className='row'>\n            {this.row(3)}\n        </div>\n        <div className='row'>\n            {this.row(4)}\n        </div>\n        <div className='row'>\n            {this.row(5)}\n        </div>\n      </div>\n    );\n  }\n}\nexport default keyboard;","\nconst names= [\n  \"accordion\",\n  \"acoustic_bass\",\n  \"acoustic_grand_piano\",\n  \"acoustic_guitar_nylon\",\n  \"acoustic_guitar_steel\",\n  \"agogo\",\n  \"alto_sax\",\n  \"applause\",\n  \"bagpipe\",\n  \"banjo\",\n  \"baritone_sax\",\n  \"bassoon\",\n  \"bird_tweet\",\n  \"blown_bottle\",\n  \"brass_section\",\n  \"breath_noise\",\n  \"bright_acoustic_piano\",\n  \"celesta\",\n  \"cello\",\n  \"choir_aahs\",\n  \"church_organ\",\n  \"clarinet\",\n  \"clavinet\",\n  \"contrabass\",\n  \"distortion_guitar\",\n  \"drawbar_organ\",\n  \"dulcimer\",\n  \"electric_bass_finger\",\n  \"electric_bass_pick\",\n  \"electric_grand_piano\",\n  \"electric_guitar_clean\",\n  \"electric_guitar_jazz\",\n  \"electric_guitar_muted\",\n  \"electric_piano_1\",\n  \"electric_piano_2\",\n  \"english_horn\",\n  \"fiddle\",\n  \"flute\",\n  \"french_horn\",\n  \"fretless_bass\",\n  \"fx_1_rain\",\n  \"fx_2_soundtrack\",\n  \"fx_3_crystal\",\n  \"fx_4_atmosphere\",\n  \"fx_5_brightness\",\n  \"fx_6_goblins\",\n  \"fx_7_echoes\",\n  \"fx_8_scifi\",\n  \"glockenspiel\",\n  \"guitar_fret_noise\",\n  \"guitar_harmonics\",\n  \"gunshot\",\n  \"harmonica\",\n  \"harpsichord\",\n  \"helicopter\",\n  \"honkytonk_piano\",\n  \"kalimba\",\n  \"koto\",\n  \"lead_1_square\",\n  \"lead_2_sawtooth\",\n  \"lead_3_calliope\",\n  \"lead_4_chiff\",\n  \"lead_5_charang\",\n  \"lead_6_voice\",\n  \"lead_7_fifths\",\n  \"lead_8_bass__lead\",\n  \"marimba\",\n  \"melodic_tom\",\n  \"music_box\",\n  \"muted_trumpet\",\n  \"oboe\",\n  \"ocarina\",\n  \"orchestra_hit\",\n  \"orchestral_harp\",\n  \"overdriven_guitar\",\n  \"pad_1_new_age\",\n  \"pad_2_warm\",\n  \"pad_3_polysynth\",\n  \"pad_4_choir\",\n  \"pad_5_bowed\",\n  \"pad_6_metallic\",\n  \"pad_7_halo\",\n  \"pad_8_sweep\",\n  \"pan_flute\",\n  \"percussive_organ\",\n  \"piccolo\",\n  \"pizzicato_strings\",\n  \"recorder\",\n  \"reed_organ\",\n  \"reverse_cymbal\",\n  \"rock_organ\",\n  \"seashore\",\n  \"shakuhachi\",\n  \"shamisen\",\n  \"shanai\",\n  \"sitar\",\n  \"slap_bass_1\",\n  \"slap_bass_2\",\n  \"soprano_sax\",\n  \"steel_drums\",\n  \"string_ensemble_1\",\n  \"string_ensemble_2\",\n  \"synth_bass_1\",\n  \"synth_bass_2\",\n  \"synth_brass_1\",\n  \"synth_brass_2\",\n  \"synth_choir\",\n  \"synth_drum\",\n  \"synth_strings_1\",\n  \"synth_strings_2\",\n  \"taiko_drum\",\n  \"tango_accordion\",\n  \"telephone_ring\",\n  \"tenor_sax\",\n  \"timpani\",\n  \"tinkle_bell\",\n  \"tremolo_strings\",\n  \"trombone\",\n  \"trumpet\",\n  \"tuba\",\n  \"tubular_bells\",\n  \"vibraphone\",\n  \"viola\",\n  \"violin\",\n  \"voice_oohs\",\n  \"whistle\",\n  \"woodblock\",\n  \"xylophone\"\n]\n\nexport default names\n\n\n","\nimport instrumentNames from './instrumentNames'\n\nimport React, { useState } from 'react';\nimport { Card, CardTitle, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\n\nconst Example = (props) => {\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n\n    const toggle = () => setDropdownOpen(prevState => !prevState);\n\n    //const [selection, setSelection]=useState('select instrument')\n    \n    const instru = instrumentNames.map((value) => {\n        \n        return <DropdownItem key={value} onClick={() => props.chooseInstru(value)}>\n            {value}\n        </DropdownItem>\n    })\n\n    const insName = props.value.replace(/^\\w/, c => c.toUpperCase())\n    let wikistyle={\n        padding:'0 0 10px 0'\n    }\n    let wikilink=\"https://en.wikipedia.org/wiki/\"+props.value\n    return (\n        <Card body>\n        <CardTitle>{insName}</CardTitle>\n        <a href={wikilink} style={wikistyle}>wiki</a>\n        <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n            <DropdownToggle caret>\n                Select Instrument\n        </DropdownToggle>\n            <DropdownMenu>\n                {instru}\n            </DropdownMenu>\n        </Dropdown>\n      </Card>\n        \n    );\n}\n\nexport default Example\n\n","import React from 'react';\nimport context from '../context'\n\n//let theIns = 'tree/gh-pages/MusyngKite/' + context.instrument + '-mp3'\n\nlet bar = [\n    [1, 3, 5],\n    [3],\n    [5],\n    [3]\n]\nlet pitch = 'C4'\nlet scale = ['C4', 'D4', 'E4', 'F4', 'G4', 'A4', 'B4']\n\nclass barplayer extends React.Component {\n    state = {\n        play: false,\n        audio: [],\n    }\n    componentDidMount(){\n        this.updateAudio(bar)\n    }\n    componentWillReceiveProps(prevProps){\n        console.log('barplayer',prevProps)\n        this.updateAudio(bar)\n    }\n\n    updateAudio(bar) {\n        \n        let audio = []\n        for (var i in bar) {\n            audio.push([])\n            for (var j in bar[i]) {\n                let url = 'MusyngKite/' +context.instrument + '-mp3' + '/' + scale[bar[i][j] - 1] + '.mp3'\n                //console.log(url)\n                audio[i].push(\n                    new Audio(url)\n                )\n            }\n        }\n        this.setState({\n            audio\n        })\n    }\n\n\n\n    /*componentDidMount() {\n        this.updateAudio(bar)\n    }*/\n\n    /*componentWillUnmount() {\n        audio.removeEventListener('ended', () => this.setState({ play: false }));\n    }*/\n\n    /*togglePlay = () => {\n        this.setState({ play: !this.state.play }, () => {\n            this.state.play ? this.audio.play() : this.audio.pause();\n        });\n    }*/\n    playbeat(beat){\n        console.log(beat)\n        return new Promise(resolve=>{\n            for(var i in beat){\n                beat[i].play()\n                setTimeout(function(){\n                    beat[i].pause();\n                    beat[i].currentTime = 0;\n                    resolve(1)\n                }, 600);\n            }\n        })       \n    }\n    async playbar(bar){\n        for(var i in bar){\n            await this.playbeat(bar[i])\n        }\n        this.setState({play:false})\n    }\n\n    togglePlay = () => {\n        let audio = this.state.audio\n        //console.log(audio)\n        this.setState({ play: true });\n        if(!this.state.play){\n            this.playbar(audio)\n        }\n    }\n\n\nrender() {\n    return (\n        <div>\n            <button onClick={this.togglePlay}>{this.state.play ? 'stop' : 'play'}</button>\n\n        </div>\n    );\n}\n}\n\nexport default barplayer;","import React, { Component } from 'react';\n\n\nimport Keyboard from './keyboard'\nimport Selector from './selector'\nimport Bplayer from '../player/barplayer'\n\nimport context from '../context'\nlet TheInstru = context.instrument\n//import midi from './instruments/midi'\n\n\nclass oldApp extends Component {\n  state = {\n    theInstrument: 'accordion',\n  }\n\n  //console.log('width'+screen.width, 'height'+screen.height)\n  componentWillMount(){\n    context.instrument='accordion'\n  }\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions.bind(this));\n  }\n\n  updateWindowDimensions() {\n    //console.log('width:' + window.innerWidth, 'height:' + window.innerHeight)\n    context.screenSize={width:window.innerWidth,height:window.innerHeight}\n  }\n\n  chooseInstru = (value) => {\n    this.setState({\n      theInstrument: value,\n    })\n    context.instrument = value\n  }\n\n  render() {\n    return (\n      <div>\n        <TheInstru.Provider value={this.state.theInstrument}>\n          <Selector value={this.state.theInstrument} chooseInstru={this.chooseInstru} />\n        </TheInstru.Provider>\n\n        <Keyboard />\n        <Bplayer instrument={this.state.theInstrument}/>\n        \n      </div>\n      \n    )\n  }\n}\n\nexport default oldApp;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nconst Example = (props) => {\n    return (\n      <Container>\n        <Row>\n          <Col>Do Do So So</Col>\n          <Col>La La So</Col>\n        </Row>\n        <Row>\n          <Col>Fa Fa Mi Mi </Col>\n          <Col>Re Re Do</Col>\n        </Row>\n        <Row>\n          <Col>So So Fa Fa</Col>\n          <Col>Mi Mi Re</Col>\n          </Row>\n          <Row>\n          <Col>So So Fa Fa</Col>\n          <Col>Mi Mi Re</Col>\n        </Row>\n        \n      </Container>\n    );\n  }\n  \n  export default Example;","import React, { useState } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst Example = (props) => {\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n  \n    const toggle = () => setDropdownOpen(prevState => !prevState);\n    const name= ['C','Db','D','Eb','E','F','Gb','G','Ab','A','Bb','B']\n    const items=name.map((value)=>{\n        return(\n        <DropdownItem key={value} onClick={() => props.selectPitch(value)}>\n            {value}\n        </DropdownItem>\n        )\n    })\n    \n    return (\n      <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n        <DropdownToggle caret>\n          Do = C4\n          </DropdownToggle>\n        <DropdownMenu>\n          {items}\n        </DropdownMenu>\n      </Dropdown>\n    );\n  }\n  \n  export default Example;","import React, { useState } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst Example = (props) => {\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n  \n    const toggle = () => setDropdownOpen(prevState => !prevState);\n    const name= [60,70,80,90,100,110,120]\n    const items=name.map((value)=>{\n        return(\n        <DropdownItem key={value} onClick={() => props.selectTap(value)}>\n            {value}\n        </DropdownItem>\n        )\n    })\n    \n    return (\n      <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n        <DropdownToggle caret>\n          Tap = 90\n          </DropdownToggle>\n        <DropdownMenu>\n          {items}\n        </DropdownMenu>\n      </Dropdown>\n    );\n  }\n  \n  export default Example;","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport NoteLayout from './notation'\nimport PitchSelector from './pitchSelector'\nimport TapSelector from './tapSelector'\n\nclass PageCompose extends React.Component {\n    selectPitch = (value) => {\n        console.log(value)\n    }\n    render() {\n        return (\n            <div>\n                <h1>Twinkle star</h1>\n\n                <Row>\n                    <PitchSelector />\n                    <TapSelector />\n                </Row>\n                <NoteLayout selectPitch={this.selectPitch} />\n            </div>\n        )\n    }\n}\n\nexport default PageCompose","import React, { Component } from 'react';\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";*/\nimport { Row, Col } from 'reactstrap';\n\nimport './App.css';\nimport Tools from './tools/page'\nimport Notation from './notation/page'\n\n//import midi from './instruments/midi'\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <Notation />\n        <Tools />\n      </div>\n    )\n  }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}